// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v6.30.2
// source: utypes.proto

package utypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortDirection int32

const (
	SortDirection_SD_ASC  SortDirection = 0
	SortDirection_SD_DESC SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SD_ASC",
		1: "SD_DESC",
	}
	SortDirection_value = map[string]int32{
		"SD_ASC":  0,
		"SD_DESC": 1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_utypes_proto_enumTypes[0].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_utypes_proto_enumTypes[0]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_utypes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{0}
}

type Decimal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	mi := &file_utypes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{1}
}

func (x *Decimal) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type ObjectID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectID) Reset() {
	*x = ObjectID{}
	mi := &file_utypes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectID) ProtoMessage() {}

func (x *ObjectID) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectID.ProtoReflect.Descriptor instead.
func (*ObjectID) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectID) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type RFC3339Time struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RFC3339Time) Reset() {
	*x = RFC3339Time{}
	mi := &file_utypes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RFC3339Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RFC3339Time) ProtoMessage() {}

func (x *RFC3339Time) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RFC3339Time.ProtoReflect.Descriptor instead.
func (*RFC3339Time) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{3}
}

func (x *RFC3339Time) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type UnixNanoTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             int64                  `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnixNanoTime) Reset() {
	*x = UnixNanoTime{}
	mi := &file_utypes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnixNanoTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnixNanoTime) ProtoMessage() {}

func (x *UnixNanoTime) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnixNanoTime.ProtoReflect.Descriptor instead.
func (*UnixNanoTime) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{4}
}

func (x *UnixNanoTime) GetV() int64 {
	if x != nil {
		return x.V
	}
	return 0
}

type YMDHTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YMDHTime) Reset() {
	*x = YMDHTime{}
	mi := &file_utypes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YMDHTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YMDHTime) ProtoMessage() {}

func (x *YMDHTime) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YMDHTime.ProtoReflect.Descriptor instead.
func (*YMDHTime) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{5}
}

func (x *YMDHTime) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type YMDTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YMDTime) Reset() {
	*x = YMDTime{}
	mi := &file_utypes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YMDTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YMDTime) ProtoMessage() {}

func (x *YMDTime) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YMDTime.ProtoReflect.Descriptor instead.
func (*YMDTime) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{6}
}

func (x *YMDTime) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             string                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_utypes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{7}
}

func (x *Version) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type BSON struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             []byte                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BSON) Reset() {
	*x = BSON{}
	mi := &file_utypes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BSON) ProtoMessage() {}

func (x *BSON) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BSON.ProtoReflect.Descriptor instead.
func (*BSON) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{8}
}

func (x *BSON) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

type Bson struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             []byte                 `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bson) Reset() {
	*x = Bson{}
	mi := &file_utypes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bson) ProtoMessage() {}

func (x *Bson) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Raw.ProtoReflect.Descriptor instead.
func (*Bson) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{9}
}

func (x *Bson) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

type DecimalArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *Decimal               `protobuf:"bytes,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *Decimal               `protobuf:"bytes,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *Decimal               `protobuf:"bytes,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *Decimal               `protobuf:"bytes,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *Decimal               `protobuf:"bytes,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *Decimal               `protobuf:"bytes,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecimalArgs) Reset() {
	*x = DecimalArgs{}
	mi := &file_utypes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecimalArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalArgs) ProtoMessage() {}

func (x *DecimalArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalArgs.ProtoReflect.Descriptor instead.
func (*DecimalArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{10}
}

func (x *DecimalArgs) GetGt() *Decimal {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *DecimalArgs) GetGte() *Decimal {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *DecimalArgs) GetLt() *Decimal {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *DecimalArgs) GetLte() *Decimal {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *DecimalArgs) GetEqual() *Decimal {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *DecimalArgs) GetNotEqual() *Decimal {
	if x != nil {
		return x.NotEqual
	}
	return nil
}

type ObjectIDArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Equal         *ObjectID              `protobuf:"bytes,1,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	In            []*ObjectID            `protobuf:"bytes,2,rep,name=in,proto3" json:"in,omitempty"`
	HasAll        []*ObjectID            `protobuf:"bytes,3,rep,name=hasAll,proto3" json:"hasAll,omitempty"`
	NotIn         []*ObjectID            `protobuf:"bytes,4,rep,name=notIn,proto3" json:"notIn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectIDArgs) Reset() {
	*x = ObjectIDArgs{}
	mi := &file_utypes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectIDArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectIDArgs) ProtoMessage() {}

func (x *ObjectIDArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectIDArgs.ProtoReflect.Descriptor instead.
func (*ObjectIDArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{11}
}

func (x *ObjectIDArgs) GetEqual() *ObjectID {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *ObjectIDArgs) GetIn() []*ObjectID {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *ObjectIDArgs) GetHasAll() []*ObjectID {
	if x != nil {
		return x.HasAll
	}
	return nil
}

func (x *ObjectIDArgs) GetNotIn() []*ObjectID {
	if x != nil {
		return x.NotIn
	}
	return nil
}

type RFC3339TimeArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *RFC3339Time           `protobuf:"bytes,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *RFC3339Time           `protobuf:"bytes,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *RFC3339Time           `protobuf:"bytes,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *RFC3339Time           `protobuf:"bytes,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *RFC3339Time           `protobuf:"bytes,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *RFC3339Time           `protobuf:"bytes,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RFC3339TimeArgs) Reset() {
	*x = RFC3339TimeArgs{}
	mi := &file_utypes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RFC3339TimeArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RFC3339TimeArgs) ProtoMessage() {}

func (x *RFC3339TimeArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RFC3339TimeArgs.ProtoReflect.Descriptor instead.
func (*RFC3339TimeArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{12}
}

func (x *RFC3339TimeArgs) GetGt() *RFC3339Time {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *RFC3339TimeArgs) GetGte() *RFC3339Time {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *RFC3339TimeArgs) GetLt() *RFC3339Time {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *RFC3339TimeArgs) GetLte() *RFC3339Time {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *RFC3339TimeArgs) GetEqual() *RFC3339Time {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *RFC3339TimeArgs) GetNotEqual() *RFC3339Time {
	if x != nil {
		return x.NotEqual
	}
	return nil
}

type UnixNanoTimeArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *UnixNanoTime          `protobuf:"bytes,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *UnixNanoTime          `protobuf:"bytes,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *UnixNanoTime          `protobuf:"bytes,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *UnixNanoTime          `protobuf:"bytes,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *UnixNanoTime          `protobuf:"bytes,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *UnixNanoTime          `protobuf:"bytes,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnixNanoTimeArgs) Reset() {
	*x = UnixNanoTimeArgs{}
	mi := &file_utypes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnixNanoTimeArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnixNanoTimeArgs) ProtoMessage() {}

func (x *UnixNanoTimeArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnixNanoTimeArgs.ProtoReflect.Descriptor instead.
func (*UnixNanoTimeArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{13}
}

func (x *UnixNanoTimeArgs) GetGt() *UnixNanoTime {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *UnixNanoTimeArgs) GetGte() *UnixNanoTime {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *UnixNanoTimeArgs) GetLt() *UnixNanoTime {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *UnixNanoTimeArgs) GetLte() *UnixNanoTime {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *UnixNanoTimeArgs) GetEqual() *UnixNanoTime {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *UnixNanoTimeArgs) GetNotEqual() *UnixNanoTime {
	if x != nil {
		return x.NotEqual
	}
	return nil
}

type YMDHArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *YMDHTime              `protobuf:"bytes,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *YMDHTime              `protobuf:"bytes,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *YMDHTime              `protobuf:"bytes,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *YMDHTime              `protobuf:"bytes,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *YMDHTime              `protobuf:"bytes,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *YMDHTime              `protobuf:"bytes,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YMDHArgs) Reset() {
	*x = YMDHArgs{}
	mi := &file_utypes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YMDHArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YMDHArgs) ProtoMessage() {}

func (x *YMDHArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YMDHArgs.ProtoReflect.Descriptor instead.
func (*YMDHArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{14}
}

func (x *YMDHArgs) GetGt() *YMDHTime {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *YMDHArgs) GetGte() *YMDHTime {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *YMDHArgs) GetLt() *YMDHTime {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *YMDHArgs) GetLte() *YMDHTime {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *YMDHArgs) GetEqual() *YMDHTime {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *YMDHArgs) GetNotEqual() *YMDHTime {
	if x != nil {
		return x.NotEqual
	}
	return nil
}

type YMDArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *YMDTime               `protobuf:"bytes,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *YMDTime               `protobuf:"bytes,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *YMDTime               `protobuf:"bytes,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *YMDTime               `protobuf:"bytes,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *YMDTime               `protobuf:"bytes,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *YMDTime               `protobuf:"bytes,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YMDArgs) Reset() {
	*x = YMDArgs{}
	mi := &file_utypes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YMDArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YMDArgs) ProtoMessage() {}

func (x *YMDArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YMDArgs.ProtoReflect.Descriptor instead.
func (*YMDArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{15}
}

func (x *YMDArgs) GetGt() *YMDTime {
	if x != nil {
		return x.Gt
	}
	return nil
}

func (x *YMDArgs) GetGte() *YMDTime {
	if x != nil {
		return x.Gte
	}
	return nil
}

func (x *YMDArgs) GetLt() *YMDTime {
	if x != nil {
		return x.Lt
	}
	return nil
}

func (x *YMDArgs) GetLte() *YMDTime {
	if x != nil {
		return x.Lte
	}
	return nil
}

func (x *YMDArgs) GetEqual() *YMDTime {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *YMDArgs) GetNotEqual() *YMDTime {
	if x != nil {
		return x.NotEqual
	}
	return nil
}

type Uint64Args struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *uint64                `protobuf:"varint,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *uint64                `protobuf:"varint,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *uint64                `protobuf:"varint,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *uint64                `protobuf:"varint,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *uint64                `protobuf:"varint,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *uint64                `protobuf:"varint,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint64Args) Reset() {
	*x = Uint64Args{}
	mi := &file_utypes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint64Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint64Args) ProtoMessage() {}

func (x *Uint64Args) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint64Args.ProtoReflect.Descriptor instead.
func (*Uint64Args) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{16}
}

func (x *Uint64Args) GetGt() uint64 {
	if x != nil && x.Gt != nil {
		return *x.Gt
	}
	return 0
}

func (x *Uint64Args) GetGte() uint64 {
	if x != nil && x.Gte != nil {
		return *x.Gte
	}
	return 0
}

func (x *Uint64Args) GetLt() uint64 {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return 0
}

func (x *Uint64Args) GetLte() uint64 {
	if x != nil && x.Lte != nil {
		return *x.Lte
	}
	return 0
}

func (x *Uint64Args) GetEqual() uint64 {
	if x != nil && x.Equal != nil {
		return *x.Equal
	}
	return 0
}

func (x *Uint64Args) GetNotEqual() uint64 {
	if x != nil && x.NotEqual != nil {
		return *x.NotEqual
	}
	return 0
}

type Int64Args struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gt            *int64                 `protobuf:"varint,1,opt,name=gt,proto3,oneof" json:"gt,omitempty"`
	Gte           *int64                 `protobuf:"varint,2,opt,name=gte,proto3,oneof" json:"gte,omitempty"`
	Lt            *int64                 `protobuf:"varint,3,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Lte           *int64                 `protobuf:"varint,4,opt,name=lte,proto3,oneof" json:"lte,omitempty"`
	Equal         *int64                 `protobuf:"varint,5,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	NotEqual      *int64                 `protobuf:"varint,6,opt,name=notEqual,proto3,oneof" json:"notEqual,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int64Args) Reset() {
	*x = Int64Args{}
	mi := &file_utypes_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int64Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64Args) ProtoMessage() {}

func (x *Int64Args) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64Args.ProtoReflect.Descriptor instead.
func (*Int64Args) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{17}
}

func (x *Int64Args) GetGt() int64 {
	if x != nil && x.Gt != nil {
		return *x.Gt
	}
	return 0
}

func (x *Int64Args) GetGte() int64 {
	if x != nil && x.Gte != nil {
		return *x.Gte
	}
	return 0
}

func (x *Int64Args) GetLt() int64 {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return 0
}

func (x *Int64Args) GetLte() int64 {
	if x != nil && x.Lte != nil {
		return *x.Lte
	}
	return 0
}

func (x *Int64Args) GetEqual() int64 {
	if x != nil && x.Equal != nil {
		return *x.Equal
	}
	return 0
}

func (x *Int64Args) GetNotEqual() int64 {
	if x != nil && x.NotEqual != nil {
		return *x.NotEqual
	}
	return 0
}

type PageArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageArgs) Reset() {
	*x = PageArgs{}
	mi := &file_utypes_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageArgs) ProtoMessage() {}

func (x *PageArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageArgs.ProtoReflect.Descriptor instead.
func (*PageArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{18}
}

func (x *PageArgs) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageArgs) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StringArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Like          *string                `protobuf:"bytes,1,opt,name=like,proto3,oneof" json:"like,omitempty"`
	Exact         *string                `protobuf:"bytes,2,opt,name=exact,proto3,oneof" json:"exact,omitempty"`
	In            []string               `protobuf:"bytes,3,rep,name=in,proto3" json:"in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringArgs) Reset() {
	*x = StringArgs{}
	mi := &file_utypes_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringArgs) ProtoMessage() {}

func (x *StringArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringArgs.ProtoReflect.Descriptor instead.
func (*StringArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{19}
}

func (x *StringArgs) GetLike() string {
	if x != nil && x.Like != nil {
		return *x.Like
	}
	return ""
}

func (x *StringArgs) GetExact() string {
	if x != nil && x.Exact != nil {
		return *x.Exact
	}
	return ""
}

func (x *StringArgs) GetIn() []string {
	if x != nil {
		return x.In
	}
	return nil
}

type VersionArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Equal         *Version               `protobuf:"bytes,1,opt,name=equal,proto3,oneof" json:"equal,omitempty"`
	In            []*Version             `protobuf:"bytes,2,rep,name=in,proto3" json:"in,omitempty"`
	HasAll        []*Version             `protobuf:"bytes,3,rep,name=hasAll,proto3" json:"hasAll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionArgs) Reset() {
	*x = VersionArgs{}
	mi := &file_utypes_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionArgs) ProtoMessage() {}

func (x *VersionArgs) ProtoReflect() protoreflect.Message {
	mi := &file_utypes_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionArgs.ProtoReflect.Descriptor instead.
func (*VersionArgs) Descriptor() ([]byte, []int) {
	return file_utypes_proto_rawDescGZIP(), []int{20}
}

func (x *VersionArgs) GetEqual() *Version {
	if x != nil {
		return x.Equal
	}
	return nil
}

func (x *VersionArgs) GetIn() []*Version {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *VersionArgs) GetHasAll() []*Version {
	if x != nil {
		return x.HasAll
	}
	return nil
}

var File_utypes_proto protoreflect.FileDescriptor

var file_utypes_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x17, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x22, 0x18, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x76, 0x22, 0x1b, 0x0a, 0x0b, 0x52, 0x46, 0x43, 0x33, 0x33, 0x33, 0x39, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x22,
	0x1c, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x76, 0x22, 0x18, 0x0a,
	0x08, 0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x22, 0x17, 0x0a, 0x07, 0x59, 0x4d, 0x44, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76,
	0x22, 0x17, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x22, 0x14, 0x0a, 0x04, 0x42, 0x53, 0x4f,
	0x4e, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x76, 0x22,
	0x14, 0x0a, 0x04, 0x42, 0x73, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x76, 0x22, 0xbc, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x41, 0x72, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x03, 0x67,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x03, 0x67, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x02, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x48, 0x02, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x03, 0x6c, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x48, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45,
	0x71, 0x75, 0x61, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x00, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x06, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x26,
	0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x22, 0xd8, 0x02, 0x0a, 0x0f, 0x52, 0x46, 0x43, 0x33, 0x33, 0x33, 0x39, 0x54, 0x69, 0x6d, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x46, 0x43, 0x33, 0x33, 0x33,
	0x39, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x46, 0x43, 0x33, 0x33, 0x33, 0x39, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x01, 0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x02, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x52, 0x46, 0x43, 0x33, 0x33, 0x33, 0x39, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x02, 0x6c,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x46, 0x43, 0x33, 0x33,
	0x33, 0x39, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x03, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x46, 0x43, 0x33, 0x33, 0x33, 0x39,
	0x54, 0x69, 0x6d, 0x65, 0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x46, 0x43, 0x33,
	0x33, 0x33, 0x39, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x22, 0xdf, 0x02, 0x0a, 0x10,
	0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x29, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x03, 0x67,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01,
	0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x02, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e,
	0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x02, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61,
	0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x03, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e,
	0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x69,
	0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74,
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x22, 0xbf, 0x02,
	0x0a, 0x08, 0x59, 0x4d, 0x44, 0x48, 0x41, 0x72, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x02, 0x67, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x01, 0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x02, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x03, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x71,
	0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x04, 0x52, 0x05, 0x65,
	0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x48, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x08, 0x6e,
	0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67,
	0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x22,
	0xb8, 0x02, 0x0a, 0x07, 0x59, 0x4d, 0x44, 0x41, 0x72, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x02, 0x67,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x59, 0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48,
	0x01, 0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x02, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59,
	0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59, 0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x03, 0x52,
	0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x59, 0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x59,
	0x4d, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x22, 0xd5, 0x01, 0x0a, 0x0a, 0x55,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x67, 0x73, 0x12, 0x13, 0x0a, 0x02, 0x67, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x03, 0x67,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x02, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05,
	0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x71, 0x75, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x22, 0xd4, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x13, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02,
	0x67, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x67, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x03, 0x67, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x02, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x03, 0x6c, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x67, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x67, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c,
	0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6e, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x63, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6b,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x61,
	0x63, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x69, 0x6e, 0x12,
	0x27, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x2a, 0x28, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x44, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x44, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x42, 0x30, 0x5a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x33, 0x76, 0x2d, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x75, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_utypes_proto_rawDescOnce sync.Once
	file_utypes_proto_rawDescData = file_utypes_proto_rawDesc
)

func file_utypes_proto_rawDescGZIP() []byte {
	file_utypes_proto_rawDescOnce.Do(func() {
		file_utypes_proto_rawDescData = protoimpl.X.CompressGZIP(file_utypes_proto_rawDescData)
	})
	return file_utypes_proto_rawDescData
}

var file_utypes_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_utypes_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_utypes_proto_goTypes = []any{
	(SortDirection)(0),       // 0: utypes.SortDirection
	(*Empty)(nil),            // 1: utypes.Empty
	(*Decimal)(nil),          // 2: utypes.Decimal
	(*ObjectID)(nil),         // 3: utypes.ObjectID
	(*RFC3339Time)(nil),      // 4: utypes.RFC3339Time
	(*UnixNanoTime)(nil),     // 5: utypes.UnixNanoTime
	(*YMDHTime)(nil),         // 6: utypes.YMDHTime
	(*YMDTime)(nil),          // 7: utypes.YMDTime
	(*Version)(nil),          // 8: utypes.Version
	(*BSON)(nil),             // 9: utypes.BSON
	(*Bson)(nil),             // 10: utypes.Raw
	(*DecimalArgs)(nil),      // 11: utypes.DecimalArgs
	(*ObjectIDArgs)(nil),     // 12: utypes.ObjectIDArgs
	(*RFC3339TimeArgs)(nil),  // 13: utypes.RFC3339TimeArgs
	(*UnixNanoTimeArgs)(nil), // 14: utypes.UnixNanoTimeArgs
	(*YMDHArgs)(nil),         // 15: utypes.YMDHArgs
	(*YMDArgs)(nil),          // 16: utypes.YMDArgs
	(*Uint64Args)(nil),       // 17: utypes.Uint64Args
	(*Int64Args)(nil),        // 18: utypes.Int64Args
	(*PageArgs)(nil),         // 19: utypes.PageArgs
	(*StringArgs)(nil),       // 20: utypes.StringArgs
	(*VersionArgs)(nil),      // 21: utypes.VersionArgs
}
var file_utypes_proto_depIdxs = []int32{
	2,  // 0: utypes.DecimalArgs.gt:type_name -> utypes.Decimal
	2,  // 1: utypes.DecimalArgs.gte:type_name -> utypes.Decimal
	2,  // 2: utypes.DecimalArgs.lt:type_name -> utypes.Decimal
	2,  // 3: utypes.DecimalArgs.lte:type_name -> utypes.Decimal
	2,  // 4: utypes.DecimalArgs.equal:type_name -> utypes.Decimal
	2,  // 5: utypes.DecimalArgs.notEqual:type_name -> utypes.Decimal
	3,  // 6: utypes.ObjectIDArgs.equal:type_name -> utypes.ObjectID
	3,  // 7: utypes.ObjectIDArgs.in:type_name -> utypes.ObjectID
	3,  // 8: utypes.ObjectIDArgs.hasAll:type_name -> utypes.ObjectID
	3,  // 9: utypes.ObjectIDArgs.notIn:type_name -> utypes.ObjectID
	4,  // 10: utypes.RFC3339TimeArgs.gt:type_name -> utypes.RFC3339Time
	4,  // 11: utypes.RFC3339TimeArgs.gte:type_name -> utypes.RFC3339Time
	4,  // 12: utypes.RFC3339TimeArgs.lt:type_name -> utypes.RFC3339Time
	4,  // 13: utypes.RFC3339TimeArgs.lte:type_name -> utypes.RFC3339Time
	4,  // 14: utypes.RFC3339TimeArgs.equal:type_name -> utypes.RFC3339Time
	4,  // 15: utypes.RFC3339TimeArgs.notEqual:type_name -> utypes.RFC3339Time
	5,  // 16: utypes.UnixNanoTimeArgs.gt:type_name -> utypes.UnixNanoTime
	5,  // 17: utypes.UnixNanoTimeArgs.gte:type_name -> utypes.UnixNanoTime
	5,  // 18: utypes.UnixNanoTimeArgs.lt:type_name -> utypes.UnixNanoTime
	5,  // 19: utypes.UnixNanoTimeArgs.lte:type_name -> utypes.UnixNanoTime
	5,  // 20: utypes.UnixNanoTimeArgs.equal:type_name -> utypes.UnixNanoTime
	5,  // 21: utypes.UnixNanoTimeArgs.notEqual:type_name -> utypes.UnixNanoTime
	6,  // 22: utypes.YMDHArgs.gt:type_name -> utypes.YMDHTime
	6,  // 23: utypes.YMDHArgs.gte:type_name -> utypes.YMDHTime
	6,  // 24: utypes.YMDHArgs.lt:type_name -> utypes.YMDHTime
	6,  // 25: utypes.YMDHArgs.lte:type_name -> utypes.YMDHTime
	6,  // 26: utypes.YMDHArgs.equal:type_name -> utypes.YMDHTime
	6,  // 27: utypes.YMDHArgs.notEqual:type_name -> utypes.YMDHTime
	7,  // 28: utypes.YMDArgs.gt:type_name -> utypes.YMDTime
	7,  // 29: utypes.YMDArgs.gte:type_name -> utypes.YMDTime
	7,  // 30: utypes.YMDArgs.lt:type_name -> utypes.YMDTime
	7,  // 31: utypes.YMDArgs.lte:type_name -> utypes.YMDTime
	7,  // 32: utypes.YMDArgs.equal:type_name -> utypes.YMDTime
	7,  // 33: utypes.YMDArgs.notEqual:type_name -> utypes.YMDTime
	8,  // 34: utypes.VersionArgs.equal:type_name -> utypes.Version
	8,  // 35: utypes.VersionArgs.in:type_name -> utypes.Version
	8,  // 36: utypes.VersionArgs.hasAll:type_name -> utypes.Version
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_utypes_proto_init() }
func file_utypes_proto_init() {
	if File_utypes_proto != nil {
		return
	}
	file_utypes_proto_msgTypes[10].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[11].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[12].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[13].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[14].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[15].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[16].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[17].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[19].OneofWrappers = []any{}
	file_utypes_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utypes_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_utypes_proto_goTypes,
		DependencyIndexes: file_utypes_proto_depIdxs,
		EnumInfos:         file_utypes_proto_enumTypes,
		MessageInfos:      file_utypes_proto_msgTypes,
	}.Build()
	File_utypes_proto = out.File
	file_utypes_proto_rawDesc = nil
	file_utypes_proto_goTypes = nil
	file_utypes_proto_depIdxs = nil
}
